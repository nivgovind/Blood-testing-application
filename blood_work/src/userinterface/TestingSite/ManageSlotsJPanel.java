/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.TestingSite;

import Business.Enterprise.Enterprise;
import Business.Platform;
import Business.UserAccount.UserAccount;
import Business.Util.EmailToolKit;
import Business.Util.InputValidator;
import Business.WorkQueue.TestSlotRequest;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shreya
 */
public class ManageSlotsJPanel extends javax.swing.JPanel {

    private JPanel rightContainer;
    private Platform platform;
    private UserAccount loginAccount;
    
    public ManageSlotsJPanel(JPanel rightContainer, Platform platform, UserAccount loginAccount) {
        initComponents();
        this.rightContainer = rightContainer;
        this.platform = platform;
        this.loginAccount = loginAccount;
        jplNewSlot.setVisible(false);
        populateSlotTable();
    }
    
    private void populateSlotTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblSlots.getModel();
        dtm.setRowCount(0);
        
        Enterprise enterprise = platform.getEnterpriseDirectory().getEnterpriseByRole(loginAccount.getRole());
        if (enterprise != null) {
            WorkQueue orderQueue = enterprise.getWorkQueue();
        }else {
            JOptionPane.showMessageDialog(null, "Error, the login account does not belong to any enterprise.", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (enterprise.getWorkQueue().getWorkRequestList().size() != 0) {
            List<TestSlotRequest> list = new ArrayList<>();
            for (WorkRequest request : enterprise.getWorkQueue().getWorkRequestList()) {
                if (request instanceof TestSlotRequest) {
                    TestSlotRequest r = (TestSlotRequest) request;
                    if (!r.isSampleCollecting() && !r.isSampleCollectionCompleted() && !r.isCancelled()) {
                        list.add(r);
                    }
                }
            }
            for (TestSlotRequest tsr : list) {
                Object[] row = new Object[7];
                row[0] = tsr.getScheduledTestingDate().toString(); 
                row[1] = tsr.getCapacity();
                row[2] = tsr;  // toString() return status
                row[3] = tsr.calcBookedRequestsHistorically() - tsr.calcBookCancelledRequests();
                row[4] = tsr.calcBookCancelledRequests(); 
                row[5] = tsr.calcAbsentRequests();
                row[6] = tsr.calcPositiveRequests();
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnNewSlot = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSlots = new javax.swing.JTable();
        lblWelcome = new javax.swing.JLabel();
        btnCancelSlot = new javax.swing.JButton();
        jplNewSlot = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtYear = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDay = new javax.swing.JTextField();
        txtMonth = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtCapacity = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        btnCreateSlot = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        btnNewSlot.setFont(new java.awt.Font("微软雅黑", 1, 14)); // NOI18N
        btnNewSlot.setText("new Slot");
        btnNewSlot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewSlotActionPerformed(evt);
            }
        });

        tblSlots.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Scheduled Testing Date", "Testing Capacity", "Status", "Still Booked Requests", "Book Cancelled Requests", "Absent Requests", "Positive People"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblSlots);

        lblWelcome.setBackground(new java.awt.Color(204, 204, 255));
        lblWelcome.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblWelcome.setText("Slots Scheduled");

        btnCancelSlot.setFont(new java.awt.Font("微软雅黑", 1, 14)); // NOI18N
        btnCancelSlot.setText("Cancel Slot");
        btnCancelSlot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelSlotActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        jLabel7.setText("Scheduled Year");

        txtYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtYearActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        jLabel8.setText("Scheduled Day");

        txtMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMonthActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        jLabel9.setText("Scheduled Month");

        txtCapacity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCapacityActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        jLabel10.setText("Capacity");

        btnCreateSlot.setFont(new java.awt.Font("微软雅黑", 1, 14)); // NOI18N
        btnCreateSlot.setText("Create");
        btnCreateSlot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateSlotActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jplNewSlotLayout = new javax.swing.GroupLayout(jplNewSlot);
        jplNewSlot.setLayout(jplNewSlotLayout);
        jplNewSlotLayout.setHorizontalGroup(
            jplNewSlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jplNewSlotLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jplNewSlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jplNewSlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtYear, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                    .addComponent(txtDay))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jplNewSlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnCreateSlot, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jplNewSlotLayout.createSequentialGroup()
                        .addGroup(jplNewSlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jplNewSlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26))
        );
        jplNewSlotLayout.setVerticalGroup(
            jplNewSlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jplNewSlotLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jplNewSlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jplNewSlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(btnCreateSlot)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jplNewSlot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNewSlot)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCancelSlot, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lblWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelSlot)
                    .addComponent(btnNewSlot))
                .addGap(60, 60, 60)
                .addComponent(jplNewSlot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateSlotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateSlotActionPerformed
        int capacity = Integer.parseInt(txtCapacity.getText());
        int year = Integer.parseInt(txtYear.getText());
        int month = Integer.parseInt(txtMonth.getText());
        int day = Integer.parseInt(txtDay.getText());
        
        if (txtYear.getText().trim().isEmpty() || !InputValidator.numbersOnlyValidate(txtYear.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid input!\nNumbers Only", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (txtMonth.getText().trim().isEmpty() || !InputValidator.numbersOnlyValidate(txtMonth.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid input!\nNumbers Only", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (txtDay.getText().trim().isEmpty() || !InputValidator.numbersOnlyValidate(txtDay.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid input!\nNumbers Only", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (txtCapacity.getText().trim().isEmpty() || !InputValidator.ageValidate(txtCapacity.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid input!\nNumbers Only", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Calendar calendar = Calendar.getInstance();
        calendar.set(year, month - 1, day);
        Date scheduleTestingDate = calendar.getTime();
        long scheduleTestingDateMills = calendar.getTimeInMillis();
        if (scheduleTestingDateMills < System.currentTimeMillis()) {
            JOptionPane.showMessageDialog(null, "Error! You can not create a slot that has a outdated scheduled test date");
            return;
        }
        
        Enterprise enterprise = platform.getEnterpriseDirectory().getEnterpriseByRole(loginAccount.getRole());
        if (enterprise == null) {
            JOptionPane.showMessageDialog(null, "Error, the login account does not belong to any enterprise.", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        WorkQueue requestQueue = enterprise.getWorkQueue();
        TestSlotRequest newSlot = new TestSlotRequest(loginAccount, scheduleTestingDate, capacity);
        
        enterprise.getWorkQueue().addWorkRequest(newSlot);
        platform.getAllActivitiesWorkQueue().addWorkRequest(newSlot);
        newSlot.release();
        JOptionPane.showMessageDialog(null, "Create Successfully");
        jplNewSlot.setVisible(false);
        populateSlotTable();
        
        try {
            EmailToolKit.sendEmailWhenNewSlotReleased(platform, newSlot);
        } catch (Exception ex) {
            Logger.getLogger(ManageSlotsJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCreateSlotActionPerformed

    private void btnNewSlotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewSlotActionPerformed
        jplNewSlot.setVisible(true);
    }//GEN-LAST:event_btnNewSlotActionPerformed

    private void btnCancelSlotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelSlotActionPerformed
        int selectedRow = tblSlots.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a slot!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        TestSlotRequest tsr = (TestSlotRequest)tblSlots.getValueAt(selectedRow, 2);
        tsr.cancel();
        populateSlotTable();
        try {
            EmailToolKit.sendEmailWhenSlotCancelled(platform, tsr);
        } catch (Exception ex) {
            Logger.getLogger(ManageSlotsJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCancelSlotActionPerformed

    private void txtYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtYearActionPerformed

    private void txtMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMonthActionPerformed

    private void txtCapacityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCapacityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCapacityActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelSlot;
    private javax.swing.JButton btnCreateSlot;
    private javax.swing.JButton btnNewSlot;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jplNewSlot;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JTable tblSlots;
    private javax.swing.JTextField txtCapacity;
    private javax.swing.JTextField txtDay;
    private javax.swing.JTextField txtMonth;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
