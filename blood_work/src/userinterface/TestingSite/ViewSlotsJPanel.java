/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.TestingSite;

import Business.Enterprise.Enterprise;
import Business.Platform;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.TestRequest;
import Business.WorkQueue.TestSlotRequest;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.ViewTestRequestDetailJPanel;
import userinterface.ViewTestSlotDetailJPanel;

/**
 *
 * @author Administrator
 */
public class ViewSlotsJPanel extends javax.swing.JPanel {

    private JPanel rightContainer;
    private Platform platform;
    private UserAccount loginAccount;
    
    public ViewSlotsJPanel(JPanel rightContainer, Platform platform, UserAccount loginAccount) {
        initComponents();
        this.rightContainer = rightContainer;
        this.platform = platform;
        this.loginAccount = loginAccount;
        populateSlotTable();
    }
    
    private void populateSlotTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblSlots.getModel();
        dtm.setRowCount(0);
        
        Enterprise enterprise = platform.getEnterpriseDirectory().getEnterpriseByRole(loginAccount.getRole());
        if (enterprise != null) {
            WorkQueue orderQueue = enterprise.getWorkQueue();
        }else {
            JOptionPane.showMessageDialog(null, "Error, the login account does not belong to any enterprise.", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (enterprise.getWorkQueue().getWorkRequestList().size() != 0) {
            List<TestSlotRequest> list = new ArrayList<>();
            for (WorkRequest request : enterprise.getWorkQueue().getWorkRequestList()) {
                if (request instanceof TestSlotRequest) {
                    list.add((TestSlotRequest) request);
                }
            }
            for (TestSlotRequest tsr : list) {
                Object[] row = new Object[7];
                row[0] = tsr.getScheduledTestingDate().toString(); 
                row[1] = tsr.getCapacity();
                row[2] = tsr;  // toString() return status
                row[3] = tsr.calcBookedRequestsHistorically() - tsr.calcBookCancelledRequests();
                row[4] = tsr.calcBookCancelledRequests(); 
                row[5] = tsr.calcAbsentRequests();
                row[6] = tsr.calcPositiveRequests();
                dtm.addRow(row);
            }
        }
    }

    private void populateTestingRequestTable(TestSlotRequest selectedSlot) {
        DefaultTableModel dtm = (DefaultTableModel) tblTestingRequests.getModel();
        dtm.setRowCount(0);
        
        for (TestRequest tr : selectedSlot.getTestRequestList()) {
            Object[] row = new Object[4];
            row[0] = tr; 
            row[1] = tr.getSampleCollector();
            row[2] = tr.getNucleicAcidTester();
            if (tr.getNucleicAcidTestDate() == null) {
                row[3] = "";
            }else {
                row[3] = tr.isPositive() == true ? "Positive" : "Negative";
            }
            
            dtm.addRow(row);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblSlots = new javax.swing.JTable();
        lblWelcome = new javax.swing.JLabel();
        btnViewAllTestingReqeust = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTestingRequests = new javax.swing.JTable();
        btnViewRequestDetail = new javax.swing.JButton();
        lblWelcome1 = new javax.swing.JLabel();
        btnViewSlotDetail = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        tblSlots.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Scheduled Testing Date", "Testing Capacity", "Status", "Still Booked Requests", "Book Cancelled Requests", "Absent Requests", "Positive People"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblSlots);

        lblWelcome.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblWelcome.setText("Testing Slots");

        btnViewAllTestingReqeust.setFont(new java.awt.Font("微软雅黑", 1, 14)); // NOI18N
        btnViewAllTestingReqeust.setText("View All Testing Request");
        btnViewAllTestingReqeust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAllTestingReqeustActionPerformed(evt);
            }
        });

        tblTestingRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status", "Sample Collector", "Nucleic Acid Tester", "Test Result"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblTestingRequests);

        btnViewRequestDetail.setFont(new java.awt.Font("微软雅黑", 1, 14)); // NOI18N
        btnViewRequestDetail.setText("View Request Detail");
        btnViewRequestDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewRequestDetailActionPerformed(evt);
            }
        });

        lblWelcome1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblWelcome1.setText("Testing Request");

        btnViewSlotDetail.setFont(new java.awt.Font("微软雅黑", 1, 14)); // NOI18N
        btnViewSlotDetail.setText("View Slot Detail");
        btnViewSlotDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewSlotDetailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnViewSlotDetail)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnViewRequestDetail)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblWelcome1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnViewAllTestingReqeust))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(lblWelcome, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lblWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnViewAllTestingReqeust)
                            .addComponent(btnViewSlotDetail))
                        .addGap(100, 100, 100))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblWelcome1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnViewRequestDetail)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewAllTestingReqeustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAllTestingReqeustActionPerformed
        int selectedRow = tblSlots.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a slot!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        TestSlotRequest tsr = (TestSlotRequest)tblSlots.getValueAt(selectedRow, 2);
        populateTestingRequestTable(tsr);
    }//GEN-LAST:event_btnViewAllTestingReqeustActionPerformed

    private void btnViewRequestDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewRequestDetailActionPerformed
        int selectedRow = tblTestingRequests.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a testing request!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        TestRequest tr = (TestRequest)tblTestingRequests.getValueAt(selectedRow, 0);
        
        ViewTestRequestDetailJPanel vtrdjp = new ViewTestRequestDetailJPanel(rightContainer, tr);
        CardLayout layout = (CardLayout)rightContainer.getLayout();
        rightContainer.add("ViewTestRequestDetailJPanel", vtrdjp);
        layout.next(rightContainer);
    }//GEN-LAST:event_btnViewRequestDetailActionPerformed

    private void btnViewSlotDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewSlotDetailActionPerformed
        int selectedRow = tblSlots.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a slot!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        TestSlotRequest tsr = (TestSlotRequest)tblSlots.getValueAt(selectedRow, 2);
        
        ViewTestSlotDetailJPanel vtsdjp = new ViewTestSlotDetailJPanel(rightContainer, tsr);
        CardLayout layout = (CardLayout)rightContainer.getLayout();
        rightContainer.add("ViewTestSlotDetailJPanel", vtsdjp);
        layout.next(rightContainer);
    }//GEN-LAST:event_btnViewSlotDetailActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnViewAllTestingReqeust;
    private javax.swing.JButton btnViewRequestDetail;
    private javax.swing.JButton btnViewSlotDetail;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JLabel lblWelcome1;
    private javax.swing.JTable tblSlots;
    private javax.swing.JTable tblTestingRequests;
    // End of variables declaration//GEN-END:variables
}
