/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.CDC;

import Business.Platform;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.TestRequest;
import Business.WorkQueue.TestSlotRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shubhank
 */
public class CDCApprovalJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CDCApprovalJPanel
     */
    private JPanel rightContainer;
    private Platform platform;
    private UserAccount loginAccount;
    private TestSlotRequest selectedSlot;

    public CDCApprovalJPanel(JPanel rightContainer, Platform platform, UserAccount loginAccount) {
        initComponents();
        this.rightContainer = rightContainer;
        this.platform = platform;
        this.loginAccount = loginAccount;
    }
    
    
    private void populateCollectableTestingRequestTable(TestSlotRequest tsr) {
        DefaultTableModel dtm = (DefaultTableModel) tblTestableTestReqeusts.getModel();
        dtm.setRowCount(0);
        
        for (WorkRequest wr : tsr.getTestRequestList()) {
            TestRequest tr = (TestRequest) wr;
            if (tr.bookedButHasntTest()) {
                Object[] row = new Object[4];
                row[0] = tr; 
                row[1] = tr.getSampleCollector();
                row[2] = tr.getNucleicAcidTester();
                if (tr.getNucleicAcidTestDate() == null) {
                    row[3] = "";
                }else {
                    row[3] = tr.isPositive() == true ? "Positive" : "Negative";
                }
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblWelcome1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTestableTestReqeusts = new javax.swing.JTable();
        btnNegative = new javax.swing.JButton();
        btnPositive = new javax.swing.JButton();

        lblWelcome1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblWelcome1.setText("Test Requests");

        tblTestableTestReqeusts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status", "Sample Collector", "Nucleic Acid Tester", "Test Result"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblTestableTestReqeusts);

        btnNegative.setFont(new java.awt.Font("微软雅黑", 1, 14)); // NOI18N
        btnNegative.setText("Decline");
        btnNegative.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNegativeActionPerformed(evt);
            }
        });

        btnPositive.setFont(new java.awt.Font("微软雅黑", 1, 14)); // NOI18N
        btnPositive.setText("Approve");
        btnPositive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPositiveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNegative)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPositive))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 597, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(lblWelcome1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(106, 106, 106))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(lblWelcome1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPositive)
                    .addComponent(btnNegative))
                .addContainerGap(276, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnNegativeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNegativeActionPerformed
        int selectedRow = tblTestableTestReqeusts.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a testing request!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        TestRequest tr = (TestRequest)tblTestableTestReqeusts.getValueAt(selectedRow, 0);

        tr.markNegative(loginAccount);
        JOptionPane.showMessageDialog(null, "Test Successfully!!");
        platform.getMsgDirectory().addMessageRequest(loginAccount, tr.getTestingPeople(), "You have tested negative for this test. kindly check");
    }//GEN-LAST:event_btnNegativeActionPerformed

    private void btnPositiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPositiveActionPerformed
        int selectedRow = tblTestableTestReqeusts.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a testing request!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        TestRequest tr = (TestRequest)tblTestableTestReqeusts.getValueAt(selectedRow, 0);
        tr.setCdcapproved(true);
        platform.getMsgDirectory().addMessageRequest(loginAccount, tr.getTestingPeople(), "You have tested positive for this test. kindly check");
        JOptionPane.showMessageDialog(null, "Test Successfully!!");
    }//GEN-LAST:event_btnPositiveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNegative;
    private javax.swing.JButton btnPositive;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblWelcome1;
    private javax.swing.JTable tblTestableTestReqeusts;
    // End of variables declaration//GEN-END:variables
}
