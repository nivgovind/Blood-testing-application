/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.CDC;

import Business.UserAccount.UserAccount;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Business.TestResult.TestResult;
import Business.Platform.Platform;
import Business.WorkQueue.TestSlotRequest;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shubhank
 */
public class CDCHistoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CDCHistoryJPanel
     */
    private JPanel rightContainer;
    private Platform platform;
    private UserAccount loginAccount;
    
    public CDCHistoryJPanel(JPanel rightContainer, Platform platform, UserAccount loginAccount) {
        this.rightContainer = rightContainer;
        this.platform = platform;
        this.loginAccount = loginAccount;
        
        initComponents();
        // Render the table with all the test results which have been approved by the CDC
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cdcTbl = new javax.swing.JTable();

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel1.setText("CDC Historical Data");

        cdcTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Report", "Nuclic Acid Test Status", "CDC Status"
            }
        ));
        jScrollPane1.setViewportView(cdcTbl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(182, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(280, 280, 280))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(166, 166, 166))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel1)
                .addGap(51, 51, 51)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(275, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) cdcTbl.getModel();
        model.setRowCount(0);
        for (TestSlotRequest testResult : platform.getTestResultDirectory().getTestResultList()) {
            if (testResult.isCdcStatus()) {
                Object[] row = new Object[3];
                row[0] = testResult;
                row[1] = testResult.getNucleicAcidTestStatus();
                row[2] = testResult.isCdcStatus();
                model.addRow(row);
            }
        }
    }
}
